openapi: 3.0.0
info:
  title: Service Booking API
  version: 1.0.0
  description: API documentation for the Laravel-based Service Booking System

servers:
  - url: http://localhost:8000/api/v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    Service:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number

    Booking:
      type: object
      properties:
        id:
          type: integer
        service_id:
          type: integer
        user_id:
          type: integer
        booking_date:
          type: string
          format: date
        status:
          type: string

paths:
  /register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Registered successfully

  /login:
    post:
      summary: Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Auth token returned

  /services:
    get:
      summary: List all services
      tags: [Services]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of services

    post:
      summary: Create a new service (admin only)
      tags: [Services]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Created successfully

  /services/{id}:
    put:
      summary: Update a service (admin only)
      tags: [Services]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Updated successfully

    delete:
      summary: Delete a service (admin only)
      tags: [Services]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted successfully

  /bookings:
    get:
      summary: List user's own bookings
      tags: [Bookings]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of user bookings

    post:
      summary: Book a service
      tags: [Bookings]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: integer
                booking_date:
                  type: string
                  format: date
      responses:
        '201':
          description: Booking created successfully

  /admin/bookings:
    get:
      summary: List all bookings (admin only)
      tags: [Bookings]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all bookings
